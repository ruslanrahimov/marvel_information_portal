{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","services/_apiKey.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getData","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacterData","getCharacter","id","character","name","description","thumbnail","path","extension","detail","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","props","marvelService","onCharLoading","setState","loading","onUpdateChar","Math","floor","random","then","char","catch","error","state","this","spinner","errorMessage","content","onClick","mjolnir","Component","View","includes","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","onError","newCharList","ended","length","arr","item","imgStyle","onCharSelected","renderItems","disabled","Skeleton","CharInfo","updateChar","charId","onCharLoaded","prevProps","skeleton","homepage","i","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3492fe.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import apiKey from './_apiKey'\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = apiKey()\r\n    _baseOffset = 210;\r\n\r\n    getData = async (url) => {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getData(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n        return res.data.results.map(this._transformCharacterData)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getData(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n        return this._transformCharacterData(res.data.results[0])\r\n    }\r\n\r\n    _transformCharacterData = (character) => {\r\n        return {\r\n            name: character.name,\r\n            description: character.description,\r\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\r\n            detail: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            id: character.id,\r\n            comics: character.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default () => {\r\n    return 'apikey=af24107aae36af4eba6819d4205f1746'\r\n}","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}}\n             width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n                <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                <g transform=\"rotate(45)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.75s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(50,80)\">\n                <g transform=\"rotate(90)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.625s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                <g transform=\"rotate(135)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.5s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(20,50.00000000000001)\">\n                <g transform=\"rotate(180)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.375s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                <g transform=\"rotate(225)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.25s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(49.99999999999999,20)\">\n                <g transform=\"rotate(270)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"-0.125s\"></animate>\n                    </circle>\n                </g>\n            </g>\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                <g transform=\"rotate(315)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\"\n                                          keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                                 values=\"1;0\" begin=\"0s\"></animate>\n                    </circle>\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {Component} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            char: {}, loading: true, error: false\n        }\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.onUpdateChar()\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onUpdateChar = () => {\n        this.onCharLoading()\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.marvelService.getCharacter(id).then(res => {\n            this.setState({char: res, loading: false})\n        }).catch(() => this.setState({loading: false, error: true}))\n    }\n\n\n    render() {\n        const {char, loading, error} = this.state\n        const spinner = loading ? <Spinner/> : null\n        const errorMessage = error ? <ErrorMessage/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n        return (<div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={this.onUpdateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>)\n    }\n\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, detail, wiki} = char;\n    return (<div className=\"randomchar__block\">\n        <img style={thumbnail.includes('image_not_available') ? {objectFit: 'contain'} : {objectFit: 'cover'}} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description !== '' ? description : 'Description will be added very soon :('}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={detail} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации,\n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <CharInfo charId={this.state.selectedChar}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}